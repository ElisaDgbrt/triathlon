Liste des sites scrapés : 

Tuto database :

https://www.freecodecamp.org/news/connect-python-with-sql/
https://phoenixnap.com/kb/mysql-command-line-windows

Commandes Git : 
https://www.atlassian.com/fr/git/tutorials/saving-changes/git-commit
Liste des commandes Git : 
Lancer le runner
    cd .\actions-runner\
    .\run.cmd
Voir le status du projet
    git status
Ajouter les fichiers
    git add .
Verification
    git status
Commit
    git commit -m "Date du JOUR"
Push en prod
    git push -u origin main


Formation Site web Flask :
https://openclassrooms.com/fr/courses/4425066-concevez-un-site-avec-flask

Tuto démarrage d'une appli flask avec Windaube : 
Tuto de base 
https://python.developpez.com/tutoriel/intro-flask-python3/
Commandes windows
https://flask.palletsprojects.com/en/1.1.x/cli/
set FLASK_APP=triathlon
set FLASK_ENV=development
flask run
Setup du virtual env : 
pip install virtualenv
python -m virtualenv <nameOfEnv>
https://stackoverflow.com/questions/67997606/how-can-i-run-flask-in-windows
https://stackoverflow.com/questions/35950740/virtualenv-is-not-recognized-as-an-internal-or-external-command-operable-prog
Setup du app.py : réponse de Viraj : https://stackoverflow.com/questions/29277581/flask-nameerror-name-app-is-not-defined
Launch venv : .\venv\scripts\activate
Flask-Login : gère la session utilisateur et gère la connexion et la déconnexion ainsi que la mémorisation des utilisateurs connectés.
Flask-SQLAlchemy : simplifie l'utilisation de Flask avec SQLAlchemy, une boîte à outils SQL Python et un ORM (mappeur relationnel d'objets) pour interagir avec les bases de données SQL.
Flask-Mail : aide à l'envoi de messages électroniques dans votre application Flask.
Tuto Flask-Alchemy
https://www.digitalocean.com/community/tutorials/how-to-add-authentication-to-your-app-with-flask-login#step-9-adding-the-login-method

Commandes cmd
Pour les chemins on utilise \
créer un dossier mkdir
Créer un fichier echo. > 
Supprimer un dossier rmdir

Setup du github OK
Création du script de scraping des sites OK
Création d'une database OK

Frontend : 
Le but serait d'avoir une interface simple compatible smartphone et PC 
Une bannnière en haut qui dirige vers les pages : Home, calendrier, athlètes, et options ?
Dans home : 
    Un module Les courses du club : Le club met en favori les courses qu'il souhaite promouvoir
    Un module Les courses en vogue : Courses où il y a le + d'adhérents qui y participent
    Un module Concours de dossard : Affiche les adhérents qui ont fait le + de courses
    Un module Prochaines courses : Affiche les courses des 7 prochains jours (mettre en surbrillance les courses où un adhérent participe)

Dans calendrier :
    Créer un calendrier bi-hebdomadaire ou mensuel (mettre en surbrillance les courses où un adhérent participe)

Dans athlètes : 
    Afficher les informations des différents athlètes et leurs prochaines courses et leur dernière et exceptions

Possibilité depuis n'importe où de cliquer sur la course pour pouvoir s'y inscrire